/////////////////////////
// Margin Helpers
/////////////////////////

// Based on our gap size defined in `utils/_sizes.scss`,
// create a media query for each respective breakpoint size,
// Loop through each margin size and set margin values.
// .{prefix}-margin-{top, right, left, bottom, left & right, top & bottom}-{breakpoint_size}-{margin_size}

@mixin margins {
    $margin_count: 5;
    @each $size, $px in $sizes_break {
        @media (min-width: $px) {
            @for $i from 0 through $margin_count {
                .#{$prefix-util-margins}m-t-#{$size}-#{$i} {
                    margin-top: $size_gap * $i !important;
                }
                .#{$prefix-util-margins}m-r-#{$size}-#{$i} {
                    margin-right: $size_gap * $i !important;
                }
                .#{$prefix-util-margins}m-b-#{$size}-#{$i} {
                    margin-bottom: $size_gap * $i !important;
                }
                .#{$prefix-util-margins}m-l-#{$size}-#{$i} {
                    margin-left: $size_gap * $i !important;
                }
                .#{$prefix-util-margins}m-x-#{$size}-#{$i} {
                    margin-left: $size_gap * $i !important;
                    margin-right: $size_gap * $i !important;
                }
                .#{$prefix-util-margins}m-y-#{$size}-#{$i} {
                    margin-top: $size_gap * $i !important;
                    margin-bottom: $size_gap * $i !important;
                }
            }
        }
    }
}


@if $include_util_margins {
    @include margins;
}
