@import '../settings/all';
@import '../utils/decimal';

/////////////////////////
// Twelve Column Grid
/////////////////////////

// Loop through all of our breakpoint sizes in `utils/_sizes.scss`,
// create a media query for each respective breakpoint size,
// Loop through each column and set the flex-basis value.

@mixin grid($output) {
    $column_count: 12;
    $column_size: 100% / $column_count;
    $output_type: null;

    // Handle output_type
    @if $output == "placeholder" {
        $output_type: '%';
    } @else if $output == "class" {
        $output_type: '.';
    }

    $grid_border: $color_brand_primary;
    $grid_gap: $size_gap;

     #{$output_type}#{$prefix_component_grid}row {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;

        // Apply space between the contained elements
        &--space-between {
            justify-content: space-between;
        }

        &--space-around {
            justify-content: space-around;
        }

        &--reverse {
            flex-direction: row-reverse;
        }

        &--no-wrap {
            flex-wrap: nowrap;
        }

        // Stretch the size of the content in the columns so they're the same width/height
        &--flex {
            [class^=#{$prefix_component_grid}col-] { display: flex; }
            [class^=#{$prefix_component_grid}col-] > * { flex: 1 1 0; }
        }

        &--border {
            border: 1px solid $grid_border;
        }

        &--align-left {
            justify-content: flex-start;
        }

        &--align-right {
            justify-content: flex-end;
        }

        // Add a spacing gap around top and bottom
        &--gap {
            margin: auto -1 * $grid_gap;

            > [class^=#{$prefix_component_grid}col-] {
                padding: $grid_gap;
            }
        }

        // Add a spacing gap horizontally between cols
        &--col-hgap {
            margin-left: -1 * $grid_gap;
            margin-right: -1 * $grid_gap;

            > [class^=#{$prefix_component_grid}col-] {
                padding-left: $grid_gap;
                padding-right: $grid_gap;
            }
        }

        // Add a spacing gap vertically between cols
        &--col-vgap {
            margin-bottom: -1 * $grid_gap;
            margin-top: -1 * $grid_gap;

            > [class^=#{$prefix_component_grid}col-] {
                padding-bottom: $grid_gap;
                padding-top: $grid_gap;
            }
        }
    }

    @for $i from 0 through $column_count {
        // Build out column widths
         #{$output_type}#{$prefix_component_grid}col-#{$i} {
            flex-basis: decimal-round($column_size * $i, 3);
            // Use '.col-size-0' for columns that should retain the width of their content.
            @if $i == 0 {
                flex: none;
            }
        }

         #{$output_type}#{$prefix_component_grid}col-offset-#{$i} {
            margin-left: decimal-round($column_size * $i, 3);
        }
    }


    @each $size, $px in $sizes_break {

        @media (min-width: $px) {

            @for $i from 0 through $column_count {
                 #{$output_type}#{$prefix_component_grid}col-#{$size}-#{$i} {
                    flex-basis: decimal-round($column_size * $i, 3);
                    @if $i == 0 {
                        flex: none;
                    }
                }

                 #{$output_type}#{$prefix_component_grid}col-#{$size}-offset-#{$i} {
                    margin-left: decimal-round($column_size * $i, 3);
                }
            }

             #{$output_type}#{$prefix_component_grid}#{$size}--hidden {
                display: none !important;
            }

             #{$output_type}#{$prefix_component_grid}#{$size}--visible {
                display: initial !important;
            }
        
        }


        // Preserve a smaller gutter on smaller screens
        @if $px > $size_break_sm {
            @media (min-width: $px) {
                 #{$output_type}#{$prefix_component_grid}container {
                    max-width: $px - 80px;
                }
            }
        } 

    }
}

@if check($include_component_grid) {
    @include grid("class");
}

// Export placeholders for easy extendability
@include grid("placeholder");